fn ifte b x y =
  match b with
  | True  -> x
  | False -> y

rec fn take n l =
  match l with
  | Nil -> Nil
  | Cons h t -> ifte (eq 0 n) Nil (Cons h (take (sub n 1) t))

rec fn fix f = let rec x = f x in x;

fn start n = take n (fix (Cons n))