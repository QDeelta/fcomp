ifte b x y = case b of
  { True  -> x
  ; False -> y
  };

take n l = case l of
  { Nil -> Nil
  ; Cons h t -> ifte (eq 0 n) Nil (Cons h (take (sub n 1) t))
  };

fix f = let { x = f x } in x;

start n = take n (fix (Cons n))
