ifte b x y =
  case b of
  { True  -> x
  ; False -> y
  };

take n l =
  case l of
  { Nil -> Nil
  ; Cons h t -> ifte (eq 0 n) Nil (Cons h (take (sub n 1) t))
  };

zipWith f l1 l2 =
  case l1 of
  { Nil -> Nil
  ; Cons h1 t1 -> case l2 of
      { Nil -> Nil
      ; Cons h2 t2 -> Cons (f h1 h2) (zipWith f t1 t2)
      }
  };

tail l =
  case l of
  { Nil -> Nil
  ; Cons h t -> t
  };

fibs = Cons 1 (Cons 1 (zipWith add fibs (tail fibs)));

start n = take n fibs